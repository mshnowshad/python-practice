print()


print("===========================I Created password Generator using Python ============================")
print()



import string    #এই লাইনটি string মডিউলটি আমদানি করে, যা বিভিন্ন ধরনের স্ট্রিং-সম্পর্কিত কার্যপ্রণালী প্রদান করে।

import random   # এই লাইনটি random মডিউলটি আমদানি করে, যা এলোমেলো সংখ্যা উৎপাদন এবং নির্বাচনের জন্য ব্যবহৃত হয়।



if __name__ == "__main__":      #এই লাইনটি নিশ্চিত করে যে কোডের পরবর্তী অংশ শুধুমাত্র তখনই চলবে যখন এটি সরাসরি চালানো হবে, অন্য কোনো মডিউল থেকে আমদানি করা হলে নয়।

    s1 = string.ascii_lowercase    # এই লাইনটি সমস্ত ছোট হাতের ইংরেজি অক্ষরের একটি স্ট্রিং তৈরি করে।
    # print('> Your lowercase is same like : ',s1)
    
    s2 = string.ascii_uppercase    # এই লাইনটি সমস্ত বড় হাতের ইংরেজি অক্ষরের একটি স্ট্রিং তৈরি করে।
    # print('>> Your uppercase is same like : ', s2)  
    
    s3 = string.digits      #  এই লাইনটি সমস্ত সংখ্যার একটি স্ট্রিং তৈরি করে।
    #  print('>> Your Digits is same like : ', s3)
    
    s4 = string.punctuation    # এই লাইনটি সমস্ত বিরামচিহ্নের একটি স্ট্রিং তৈরি করে।
    # print('>> Your Digits is same like : ',s4 )
    
    plen = int(input('>> Enter Password length : '))  #>> এই লাইনটি ব্যবহারকারীর কাছ থেকে পাসওয়ার্ডের দৈর্ঘ্য ইনপুট নেয় এবং এটিকে একটি পূর্ণসংখ্যা (integer) হিসাবে সংরক্ষণ করে।
    
    s = []   #> একটি ফাঁকা list() তৈরি করা হয়। 
    
    # s.append(list(s1))
    # s.append(list(s2))
    # s.append(list(s3))
    # s.append(list(s4))
    s.extend(list(s1))   #> ছোট হাতের অক্ষরগুলোকে তালিকায় যোগ করা হয়।
    s.extend(list(s2))   #> line : 37
    s.extend(list(s3))  #> line : 37
    s.extend(list(s4))   # line : 37
    # print(s)
    # print()
    
    random.shuffle(s)  #> 'shuffle()' ফাংশন তালিকা 's' এর উপাদানগুলোকে এলোমেলোভাবে পুনঃবিন্যস্ত করে।
    # print(s)
    
    print("#> Your generate is equal : ","".join(s[0:plen]))   #>  এই লাইনটি তালিকা থেকে এলোমেলোভাবে plen সংখ্যক চরিত্র নির্বাচন করে এবং সেগুলোকে সংযুক্ত করে পাসওয়ার্ড তৈরি করে।




print()

print('============>>>>>>>>> Congratulations! you complete the project <<<<<<<<=================')







print()



print()


# print("===========================================Explain with AI =======================================================")
print()



'''


#> 1. প্রয়োজনীয় মডিউল আমদানি:

import string   #এই লাইনটি string মডিউলটি আমদানি করে, যা বিভিন্ন ধরনের স্ট্রিং-সম্পর্কিত কার্যপ্রণালী প্রদান করে।
import random    # এই লাইনটি random মডিউলটি আমদানি করে, যা এলোমেলো সংখ্যা উৎপাদন এবং নির্বাচনের জন্য ব্যবহৃত হয়।


#> 2. প্রধান অংশ:

if __name__ == "__main__": #এই লাইনটি নিশ্চিত করে যে কোডের পরবর্তী অংশ শুধুমাত্র তখনই চলবে যখন এটি সরাসরি চালানো হবে, অন্য কোনো মডিউল থেকে আমদানি করা হলে নয়।


#> 3. চরিত্রের সেট তৈরি:

s1 = string.ascii_lowercase # এই লাইনটি সমস্ত ছোট হাতের ইংরেজি অক্ষরের একটি স্ট্রিং তৈরি করে।
s2 = string.ascii_uppercase  # এই লাইনটি সমস্ত বড় হাতের ইংরেজি অক্ষরের একটি স্ট্রিং তৈরি করে।
s3 = string.digits   #  এই লাইনটি সমস্ত সংখ্যার একটি স্ট্রিং তৈরি করে।
s4 = string.punctuation   # এই লাইনটি সমস্ত বিরামচিহ্নের একটি স্ট্রিং তৈরি করে।


#$> 4. পাসওয়ার্ডের দৈর্ঘ্য নেওয়া:

plen = int(input("Enter password length\n")): এই লাইনটি ব্যবহারকারীর কাছ থেকে পাসওয়ার্ডের দৈর্ঘ্য ইনপুট নেয় এবং এটিকে একটি পূর্ণসংখ্যা (integer) হিসাবে সংরক্ষণ করে।
5. চরিত্রগুলোকে একত্রিত করা:

s = []: একটি ফাঁকা তালিকা তৈরি করা হয়।
s.extend(list(s1)): ছোট হাতের অক্ষরগুলোকে তালিকায় যোগ করা হয়।
s.extend(list(s2)): বড় হাতের অক্ষরগুলোকে তালিকায় যোগ করা হয়।
s.extend(list(s3)): সংখ্যাগুলোকে তালিকায় যোগ করা হয়।
s.extend(list(s4)): বিরামচিহ্নগুলোকে তালিকায় যোগ করা হয়।
6. পাসওয়ার্ড উৎপন্ন করা:

print("Your password is: "): এই লাইনটি পাসওয়ার্ড প্রদর্শন করার জন্য একটি বার্তা ছাপায়।
print("".join(random.sample(s, plen))): এই লাইনটি তালিকা থেকে এলোমেলোভাবে plen সংখ্যক চরিত্র নির্বাচন করে এবং সেগুলোকে সংযুক্ত করে পাসওয়ার্ড তৈরি করে।
সারসংক্ষেপ:

প্রদত্ত কোডটি একটি এলোমেলো পাসওয়ার্ড জেনারেটর। এটি বিভিন্ন ধরনের চরিত্র সংগ্রহ করে, ব্যবহারকারীর কাছ থেকে পাসওয়ার্ডের দৈর্ঘ্য নেয়, এবং এলোমেলোভাবে চরিত্রগুলো নির্বাচন করে একটি পাসওয়ার্ড তৈরি করে।









'''
print()










